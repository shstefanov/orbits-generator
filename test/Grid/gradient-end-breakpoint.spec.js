const { deepEqual } = require("assert");
const Grid = require("../../src/lib/Grid");

describe("Grid.gradient (break: true breakpoint)", () => {
  it("TODO", () => {

    const grid = new Grid({
      bounds: { x: [ -100, 100 ] },
      wrap:   ["x"],
      gradient: [
        
        // Group 1
        {
          axis:   ["x"], origin: { x: 0 },
          values: { 0:  100, 39: 40, 65: 0 },
        },
        {
          axis:   ["x"], origin: { x: 0 },
          values: { 0: 0, 30: 0, 65: -90 },
          break: true
        },


        {
          axis:   ["x"], origin: { x: 0 },
          values: { 0: 0, 70: 0, 80: 25, 85: 0 },
          break: true
        },
      ]
    });

    grid.fill( (p, v) => {
      return v > 0 ? v : 0;
    });

    deepEqual([
      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,15,
      20,25,22,20,17,15,12,10,7,5,2,0,0,0,0,0,0,
      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
      1,6,9,14,18,22,27,30,35,38,43,46,51,54,56,
      57,59,61,62,64,65,67,68,70,71,73,74,76,77,
      79,81,82,84,85,87,88,90,91,93,94,96,97,99,
      97,96,94,93,91,90,88,87,85,84,82,81,79,77,
      76,74,73,71,70,68,67,65,64,62,61,59,57,56,
      54,51,46,43,38,35,30,27,22,18,14,9,6,1,0,
      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
      0,0,0,0,0,2,5,7,10,12,15,17,20,22,25,20,15,
      10,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    ], grid.shape);
    // console.log(grid.shape.join(","));
  });
});